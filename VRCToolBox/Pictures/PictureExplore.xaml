<UserControl
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VRCToolBox.Pictures"
        xmlns:wpftk="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:si="clr-namespace:VRCToolBox.SystemIO"
        xmlns:c="clr-namespace:VRCToolBox.Common"
        x:Class="VRCToolBox.Pictures.PictureExplore"
        mc:Ignorable="d"
        d:Height="800" d:Width="1284"
        IsEnabled="{Binding IsInitialized.Result}">
    <UserControl.Resources>
        <local:PathToPictureConverter x:Key="PathToPictureConverter"/>
        <local:ImageConverter x:Key="ImageConverter"/>
        <local:TweetRelatedPicturesToStringConverter x:Key="TweetRelatedPicturesToStringConverter"/>
        <local:RelationToVisibleConverter x:Key="RelationToVisibleConverter"/>
        <si:ToDirectoryEntryConverter x:Key="ToDirectoryEntryConverter"/>
        <Style TargetType="{x:Type ListViewItem}" x:Key="SetItemFocusStyle">
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="IsSelected" Value="True"/>
                </Trigger>
            </Style.Triggers>
            <!--<Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"/>
            <Setter Property="ContextMenu" Value="{Binding Path=ContextMenu, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"/>-->
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="ButtonStyleBase">
            <Style.Setters>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Background" Value="{x:Null}"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                    <Setter Property="Background" Value="{x:Null}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <c:CommandReference x:Key="SetDirectoryCommandReference" Command="{Binding SetDirectoryCommand}"
                            CommandExecuting="CommandReference_CommandExecuting" CommandExecuted="CommandReference_CommandExecuted"/>
        <c:CommandReference x:Key="SearchCommandReference" Command="{Binding SearchPicturesCommand}" CommandExecuting="CommandReference_CommandExecuting_1" CommandExecuted="CommandReference_CommandExecuted"/>
        <c:CommandReference x:Key="GetPictureCommand" Command="{Binding GetPictureCommand}" CommandExecuting="BeforeShowPicture" CommandExecuted="AfterShowPicture"/>
        <c:CommandReference x:Key="GetPictureFromOthersCommand" Command="{Binding GetPictureFromOthersCommand}" CommandExecuting="CommandReference_CommandExecuting" CommandExecuted="AfterShowPicture"/>
    </UserControl.Resources>
    <UserControl.DataContext>
        <local:PictureExploreViewModel/>
    </UserControl.DataContext>
    <UserControl.InputBindings>
        <KeyBinding Key="F5" Modifiers="" Command="{Binding ReloadPhotoContextCommand}"/>
    </UserControl.InputBindings>
    <Grid x:Name="Grid_Main">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="500*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="250*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="250*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="150*"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="150*"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Column="2" Grid.Row="0" FontSize="40" Height="60" Width="300" Text="初期処理中……" 
                   Visibility="{Binding IsInitialized.Result, Converter={StaticResource BooleanToVisibilityNegativeConverter}}"/>
        <Grid Grid.Column="0" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ListView x:Name="Hold_View" Grid.Row="0" Grid.ColumnSpan="2" ItemsSource="{Binding HoldPictures}" MouseDoubleClick="listView_MouseDoubleClick">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <wpftk:VirtualizingWrapPanel VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource ResourceKey=SetItemFocusStyle}" TargetType="{x:Type ListViewItem}"/>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Image Source="{Binding FullName, Converter={StaticResource PathToPictureConverter}, IsAsync=True}" 
                               Width="100" Height="75" 
                               Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}">
                            <!--<Image.ContextMenu>
                                <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Mode=Self}}">
                                    <MenuItem Header="削除"
                                              Command="{Binding RemoveHoldPictureCommand}" CommandParameter="{Binding Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}"/>
                                </ContextMenu>
                            </Image.ContextMenu>-->
                        </Image>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Button Content="候補リスト初期化" ToolTip="候補リストからすべての写真を削除します。" Grid.Column="0" Grid.Row="2" Margin="10,10,10,10" 
                    Command="{Binding ClearAllHoldPicturesCommand, Mode=OneWay}">
            </Button>
            <Button Content="候補へ加える" ToolTip="表示中の写真を候補リストに加えます。" Grid.Column="1" Grid.Row="2" Margin="10,10,10,10" Command="{Binding HoldPictureCommand, Mode=OneWay}"/>
        </Grid>
        <GridSplitter Grid.Column="0" HorizontalAlignment="Stretch" Grid.Row="1"/>
        <Grid Grid.Column="0" Grid.Row="2">
            <TreeView x:Name="Directory_Tree" Grid.Column="0" Grid.RowSpan="3" ItemsSource="{Binding Directories, IsAsync=True}">
                <TreeView.Resources>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{ui:StaticResource ResourceKey=DefaultTreeViewItemStyle}">
                        <EventSetter Event="TreeViewItem.Expanded" Handler="Directory_Tree_Expanded">
                        </EventSetter>
                    </Style>
                </TreeView.Resources>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding SubDirectoryEntory}">
                        <TextBlock Text="{Binding DirectoryName}">
                        </TextBlock>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{StaticResource SetDirectoryCommandReference}" 
                                               CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=TreeView}, Converter={StaticResource ToDirectoryEntryConverter}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TreeView>
        </Grid>
        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Grid.RowSpan="3"/>
        <Grid Grid.Column="2" Grid.RowSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="1.3*"/>
            </Grid.RowDefinitions>
            <Grid Grid.ColumnSpan="2" Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="13*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <ScrollViewer x:Name="PhotoViewer" Grid.Row="0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                      PreviewMouseLeftButtonDown="PhotoViewer_PreviewMouseLeftButtonDown" MouseLeftButtonUp="PhotoViewer_MouseLeftButtonUp"
                      MouseMove="PhotoViewer_MouseMove" MouseLeave="PhotoViewer_MouseLeave" PreviewMouseWheel="ImageBase_PreviewMouseWheel" MouseDown="PhotoViewer_MouseDown" MouseUp="PhotoViewer_MouseUp">
                    <Grid x:Name="ImageBase" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <MatrixTransform x:Name="matrixTransform"/>
                        </Grid.RenderTransform>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding ActualWidth, ElementName=PhotoViewer}"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{Binding ActualHeight, ElementName=PhotoViewer}"/>
                        </Grid.RowDefinitions>
                        <Image x:Name="Picture_Image" Source="{Binding PictureData.FullName, Converter={StaticResource ImageConverter}}" Grid.Column="0" Grid.Row="0"/>
                    </Grid>
                </ScrollViewer>
                <TextBlock Grid.Row="1" FontSize="12" Text="{Binding PictureData.PhotoName}" VerticalAlignment="Center"/>
                <UniformGrid Grid.Row="2" Rows="1">
                    <Button x:Name="B_RotateLeft" Content="左回転" Click="B_RotateLeft_Click"/>
                    <Button x:Name="B_Save" Content="回転後を保存" Click="B_Save_Click"/>
                    <Button x:Name="B_RotateRight" Content="右回転" Click="B_RotateRight_Click"/>
                </UniformGrid>
            </Grid>
            <GridSplitter HorizontalAlignment="Stretch" Grid.ColumnSpan="2" Grid.Row="1"/>
            <Grid Grid.ColumnSpan="2" Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="6*"/>
                </Grid.RowDefinitions>
                <!--<TextBox Grid.Column="0" Grid.Row="0" Text="{Binding SelectedDirectory}" FontSize="16" Height="30" Margin="0,3,102,0" VerticalAlignment="Top"/>-->
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="4*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <UniformGrid Grid.Column="0" Grid.Row="0" Columns="3" Rows="1">
                        <Button Content="＜" IsEnabled="False"/>
                        <Button Content="＞" IsEnabled="False"/>
                        <Button Content="↑" Command="{Binding UpDirectoryCommand}"/>
                    </UniformGrid>
                    <ComboBox Grid.Column="1" Grid.Row="0" FontSize="16" IsEditable="True" VerticalContentAlignment="Center"
                          ItemsSource="{Binding DefaultDirectories}" Text="{Binding SelectedDirectory}"/>
                    <Button Grid.Column="0" Grid.Row="1" Content="検索条件" Command="{StaticResource SearchCommandReference}"/>
                    <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding SearchCondition}" FontSize="16" VerticalAlignment="Center"/>
                </Grid>
                <ListView x:Name="Picture_View" Grid.ColumnSpan="2" Grid.Row="1" SelectionMode="Single" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                      ItemsSource="{Binding FileSystemInfos}">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <wpftk:VirtualizingWrapPanel VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel"
                                                     VirtualizingPanel.CacheLength="2" VirtualizingPanel.CacheLengthUnit="Page" VirtualizingPanel.IsContainerVirtualizable="True"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Grid.IsSharedSizeScope="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{StaticResource GetPictureCommand}" 
                                                               CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView, AncestorLevel=1}, 
                                                                                  Converter={StaticResource TweetRelatedPicturesToStringConverter}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <StackPanel Width="132" Height="120">
                                    <Image Source="{Binding ImagePath, Converter={StaticResource PathToPictureConverter}, IsAsync=True}" Width="132" Height="68"/>
                                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap"/>
                                </StackPanel>
                            </ContentControl>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </Grid>
        <GridSplitter Grid.Column="3" HorizontalAlignment="Stretch" Grid.RowSpan="3"/>
        <Grid Grid.Column="4" Grid.RowSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="6*"/>
                    </Grid.RowDefinitions>
                    <TextBox c:TextBoxAttachment.EnterDownBehavior="UpdateSourceAndSelectAll" Grid.Row="0" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Return" Modifiers="" Command="{Binding SaveTagAsyncCommand}" CommandParameter="{Binding Text, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBox,AncestorLevel=1}}"/>
                        </TextBox.InputBindings>
                    </TextBox>
                    <ListView Grid.Row="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding PictureTagInfos}" SelectionMode="Single">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemContainerStyle>
                            <Style BasedOn="{StaticResource ResourceKey=SetItemFocusStyle}" TargetType="ListViewItem"/>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <CheckBox Content="{Binding Path=Tag.TagName}" IsChecked="{Binding Path=IsSelected}" Width="Auto" MinWidth="1"
                                          Command="{Binding ChangeTagStateCommand}" 
                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}, Path=SelectedItem}"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
                <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch"/>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Button Grid.Column="0" Grid.Row="0" Content="アバター" ToolTip="アバター名をコピーできます。" 
                            Command="{Binding CopyStringCommand, Mode=OneWay}" CommandParameter="{Binding AvatarData.AvatarName}"/>
                    <ComboBox Grid.Row="0" ItemsSource="{Binding AvatarList}" SelectedItem="{Binding AvatarData}" 
                              SelectedValue="{Binding AvatarData.AvatarId}" SelectedValuePath="AvatarId" 
                              FontSize="16" VerticalContentAlignment="Stretch" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding AvatarName}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button Grid.Column="0" Grid.Row="1" Content="製作者" ToolTip="製作者名をコピーできます。" Command="{Binding CopyStringCommand}" CommandParameter="{Binding AvatarData.AvatarAuthor}"/>
                    <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding AvatarData.AvatarAuthor}" FontSize="16" VerticalAlignment="Center"/>
                    <Button Grid.Column="0" Grid.Row="2" Content="ワールド" ToolTip="ワールド名をコピーできます。" Command="{Binding CopyStringCommand}" CommandParameter="{Binding WorldData.WorldName}"/>
                    <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding WorldData.WorldName}" FontSize="16" VerticalContentAlignment="Center"/>
                    <Button Grid.Column="0" Grid.Row="3" Content="製作者" ToolTip="製作者名をコピーできます。" Command="{Binding CopyStringCommand}" CommandParameter="{Binding WorldData.WorldAuthor}"/>
                    <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding WorldData.WorldAuthor}" FontSize="16" VerticalContentAlignment="Center"/>
                    <Button Grid.ColumnSpan="2" Grid.Row="4" Content="写真の情報を保存" ToolTip="写真の情報のみを保存します。" Command="{Binding SavePhotoContentsCommand}">
                        <Button.CommandParameter>
                            <System:Boolean>False</System:Boolean>
                        </Button.CommandParameter>
                    </Button>
                </Grid>
            </Grid>
            <GridSplitter Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Stretch"/>
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <ListView ItemsSource="{Binding OtherPictures}" Grid.Row="0">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <wpftk:VirtualizingWrapPanel VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <ContentControl>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{StaticResource GetPictureFromOthersCommand}" 
                                                               CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView, AncestorLevel=1}, 
                                                                                  Converter={StaticResource TweetRelatedPicturesToStringConverter}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Image Width="40" Height="40" Source="{Binding FullName, Converter={StaticResource PathToPictureConverter}, IsAsync=True}"
                                       Tag="{Binding RelativeSource={RelativeSource AncestorType=ListView, AncestorLevel=1,Mode=FindAncestor}}">
                                    <Image.ContextMenu>
                                        <ContextMenu DataContext="{Binding PlacementTarget.Tag.DataContext, RelativeSource={RelativeSource Mode=Self}}">
                                            <MenuItem Header="紐づけを外す" Command="{Binding RemoveOtherPictureCommand}" CommandParameter="{Binding PlacementTarget.Tag.SelectedIndex, RelativeSource={RelativeSource AncestorType=ContextMenu, Mode=FindAncestor,AncestorLevel=1}}"/>
                                        </ContextMenu>
                                    </Image.ContextMenu>
                                </Image>
                            </ContentControl>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button Content="投稿内容" ToolTip="投稿内容をコピーできます。" Grid.Column="0" Grid.Row="0" Height="32" 
                            Command="{Binding CopyStringCommand}" CommandParameter="{Binding Tweet.Content}"/>
                    <CheckBox Content="複数枚選択" Grid.Column="1" Grid.Row="0" Height="20" Margin="15,18,15,12"
                              IsChecked="{Binding IsSingleSelect, Converter={StaticResource BooleanToNegativeConverter}, Mode=TwoWay}"/>
                </Grid>
                <TextBox Grid.Row="2" Block.LineHeight="1" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" Text="{Binding Tweet.Content}"/>
                <UniformGrid Grid.Row="3" Rows="2">
                    <Button Content="すべて保存" x:Name="Save_Picture_Content" ToolTip="写真の情報と投稿内容をすべて保存します。"
                            Command="{Binding SavePhotoContentsCommand}">
                        <Button.CommandParameter>
                            <System:Boolean>True</System:Boolean>
                        </Button.CommandParameter>
                    </Button>
                    <Button Content="投稿済みへ" x:Name="Move_To_Upload" Command="{Binding ChangeUploadedAsyncCommand}" IsEnabled="{Binding TweetIsSaved}"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <Button Content="" IsEnabled="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <Button Content="" IsEnabled="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                </UniformGrid>
            </Grid>
        </Grid>
        <GridSplitter Grid.Column="5" HorizontalAlignment="Stretch" Grid.RowSpan="3"/>
        <Grid Grid.Column="6" Grid.RowSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Column="4" Grid.RowSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.ColumnSpan="2" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1.5*"/>
                        <RowDefinition Height="6*"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="12*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Border x:Name="World_Dummy0" Grid.Column="0" Visibility="Hidden"/>
                    <Border x:Name="World_Dummy1" Grid.Column="1" Visibility="Hidden"/>
                    <Grid Grid.ColumnSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <DatePicker Grid.Column="0" x:Name="BeginDate" SelectedDate="{Binding WorldVisitDate}" SelectedDateFormat="Long" 
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontSize="12"/>
                        <Button Grid.Column="1" Content="検索" Margin="10,10,10,15" Command="{Binding SearchWorldVisitListByDateCommand}"/>
                    </Grid>
                    <ListView x:Name="WorldVisitList" ItemsSource="{Binding WorldVisits}" Grid.ColumnSpan="2" Grid.Row="1" SelectionChanged="WorldVisitList_SelectionChanged">
                        <ListView.ItemContainerStyle>
                            <Style BasedOn="{StaticResource ResourceKey=SetItemFocusStyle}" TargetType="{x:Type ListViewItem}"/>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="時間" DisplayMemberBinding="{Binding VisitTime, StringFormat=yyyy/MM/dd HH:mm:ss}" Width="{Binding ActualWidth, ElementName=World_Dummy0}"/>
                                <GridViewColumn Header="ワールド" DisplayMemberBinding="{Binding WorldName}" Width="{Binding ActualWidth, ElementName=World_Dummy1}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <GridSplitter Grid.ColumnSpan="2" Grid.Row="2" HorizontalAlignment="Stretch"/>
                    <Border x:Name="User_Dummy" Grid.ColumnSpan="2" Visibility="Hidden"/>
                    <ListView ItemsSource="{Binding UserList}" Grid.ColumnSpan="2" Grid.Row="3">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="名前" Width="{Binding ActualWidth, ElementName=User_Dummy}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <UniformGrid Grid.ColumnSpan="2" Grid.Row="4" Columns="2" Rows="1">
                        <Button Content="Twitterを開く" Command="{Binding OpenTwitterCommand, Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        <Button Content="VRChat (Webサイト)" Command="{Binding OpenVRChatWebSiteCommand, Mode=OneWay}"/>
                    </UniformGrid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
